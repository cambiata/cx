		static public inline var valNv1:Int = Std.int(N1 * Constants.BASE_NOTE_VALUE ) ;
		static public inline var valNv1dot:Int = Std.int(N1 * Constants.BASE_NOTE_VALUE*DOT ) ;
		static public inline var valNv1ddot:Int = Std.int(N1 * Constants.BASE_NOTE_VALUE*DOTDOT ) ;
		static public inline var valNv1tri:Int = Std.int(N1 * Constants.BASE_NOTE_VALUE*TRI ) ;
		static public inline var valNv2:Int = Std.int(N2 * Constants.BASE_NOTE_VALUE ) ;
		static public inline var valNv2dot:Int = Std.int(N2 * Constants.BASE_NOTE_VALUE*DOT ) ;
		static public inline var valNv2ddot:Int = Std.int(N2 * Constants.BASE_NOTE_VALUE*DOTDOT ) ;
		static public inline var valNv2tri:Int = Std.int(N2 * Constants.BASE_NOTE_VALUE * TRI ) ;
		static public inline var valNv4:Int = Std.int(N4 * Constants.BASE_NOTE_VALUE ) ;
		static public inline var valNv4dot:Int = Std.int(N4 * Constants.BASE_NOTE_VALUE*DOT ) ;
		static public inline var valNv4ddot:Int = Std.int(N4 * Constants.BASE_NOTE_VALUE*DOTDOT ) ;
		static public inline var valNv4tri:Int = Std.int(N4 * Constants.BASE_NOTE_VALUE * TRI ) ;
		static public inline var valNv8:Int = Std.int(N8 * Constants.BASE_NOTE_VALUE ) ;
		static public inline var valNv8dot:Int = Std.int(N8 * Constants.BASE_NOTE_VALUE*DOT ) ;
		static public inline var valNv8ddot:Int = Std.int(N8 * Constants.BASE_NOTE_VALUE*DOTDOT ) ;
		static public inline var valNv8tri:Int = Std.int(N8 * Constants.BASE_NOTE_VALUE * TRI ) ;
		static public inline var valNv16:Int = Std.int(N16 * Constants.BASE_NOTE_VALUE ) ;
		static public inline var valNv16dot:Int = Std.int(N16 * Constants.BASE_NOTE_VALUE*DOT ) ;
		static public inline var valNv16ddot:Int = Std.int(N16 * Constants.BASE_NOTE_VALUE*DOTDOT ) ;
		static public inline var valNv16tri:Int = Std.int(N16 * Constants.BASE_NOTE_VALUE * TRI ) ;
		static public inline var valNv32:Int = Std.int(N32 * Constants.BASE_NOTE_VALUE ) ;
		static public inline var valNv32dot:Int = Std.int(N32 * Constants.BASE_NOTE_VALUE*DOT ) ;
		static public inline var valNv32ddot:Int = Std.int(N32 * Constants.BASE_NOTE_VALUE*DOTDOT ) ;
		static public inline var valNv32tri:Int = Std.int(N32 * Constants.BASE_NOTE_VALUE * TRI ) ;

case valNv1: return ENoteVal.Nv1;
case valNv1dot: return ENoteVal.Nv1dot;
case valNv1ddot: return ENoteVal.Nv1ddot;
case valNv1tri: return ENoteVal.Nv1tri;
case valNv2: return ENoteVal.Nv2;
case valNv2dot: return ENoteVal.Nv2dot;
case valNv2ddot: return ENoteVal.Nv2ddot;
case valNv2tri: return ENoteVal.Nv2tri;
case valNv4: return ENoteVal.Nv4;
case valNv4dot: return ENoteVal.Nv4dot;
case valNv4ddot: return ENoteVal.Nv4ddot;
case valNv4tri: return ENoteVal.Nv4tri;
case valNv8: return ENoteVal.Nv8;
case valNv8dot: return ENoteVal.Nv8dot;
case valNv8ddot: return ENoteVal.Nv8ddot;
case valNv8tri: return ENoteVal.Nv8tri;
case valNv16: return ENoteVal.Nv16;
case valNv16dot: return ENoteVal.Nv16dot;
case valNv16ddot: return ENoteVal.Nv16ddot;
case valNv16tri: return ENoteVal.Nv16tri;
case valNv32: return ENoteVal.Nv32;
case valNv32dot: return ENoteVal.Nv32dot;
case valNv32ddot: return ENoteVal.Nv32ddot;
case valNv32tri: return ENoteVal.Nv32tri;
